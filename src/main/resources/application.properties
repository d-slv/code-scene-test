spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.jdbc-url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_USER_PASSWORD}
spring.datasource.hikari.auto-commit=true

spring.jpa.hibernate.ddl-auto=update

x.white-list-paths = on

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

logging.level.org.springframework.web=info

logging.level.root=info

# Uso do Spring para gerenciamento das tasks do quartz
using.spring.schedulerFactory=true
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=always

server.servlet.context-path=/telemed

# ======================================    kafka    ======================================

# topic config
io.confluent.developer.config.topic.name=telehealth_server-to-client-hapvida
io.confluent.developer.config.topic.replicas=6
io.confluent.developer.config.topic.partitions=6

# common configs
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=${KAFKA_SERVER}
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${KAFKA_PASSWORD}";
spring.kafka.properties.security.protocol=SASL_SSL


# Confluent Cloud Schema Registry configuration
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.schema.registry.basic.auth.user.info=7FTVVX4MSH6AW4M3:7TOucAFhAvhMzQXttTGPl0dgT4kq2pgj0tikGGHs9V4FqIDtU8NXL1wDniZ+okYl
spring.kafka.properties.schema.registry.url=https://psrc-o2wjx.us-east-2.aws.confluent.cloud

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# Consumer configuration
spring.kafka.consumer.group-id=telehealth-client-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

# MsChat Topic info
mschat-producer-topic=telehealth-to-mschat
mschat-consumer-topic=mschat-to-telehealth

# Multiple EventTypes in one Topic config
spring.kafka.properties.auto.register.schemas=true
spring.kafka.properties.use.latest.version: true

# ====================================== file ======================================

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Max file size.
spring.servlet.multipart.max-file-size=20MB
# Max Request Size
spring.servlet.multipart.max-request-size=20MB

# ====================================== hikari ======================================
spring.datasource.connection-timeout=60000
spring.datasource.maximum-pool-size=15
spring.datasource.max-lifetime=1800000
spring.datasource.minimum-idle=10
spring.datasource.validation-timeout=3000
spring.datasource.idle-timeout=60000
